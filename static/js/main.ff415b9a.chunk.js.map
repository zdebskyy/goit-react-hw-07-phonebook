{"version":3,"sources":["redux/contacts/contactsActions.js","redux/contacts/contactsReducers.js","redux/store.js","components/AppHeader/AppHeader.js","components/Layout/Layout.js","components/InputForm/InputForm.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","contactsActions","onChangeFilter","items","createReducer","state","action","payload","filter","contact","id","loading","combineReducers","store","configureStore","reducer","contacts","contactsReducer","AppHeader","CSSTransition","in","appear","timeout","classNames","className","Layout","children","InputForm","label","placeholder","type","value","onInput","onChange","e","target","contactsOperations","addContact","name","number","dispatch","axios","post","then","response","data","catch","error","fetchContacts","get","removeContact","delete","getContacts","getFilter","contactsSelectors","getLoading","filteredContacts","createSelector","toLowerCase","includes","ContactForm","notify","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleSubmit","preventDefault","props","map","el","find","onAddContact","setState","handleInput","handleNumber","this","onSubmit","Component","mapDispatchToProps","connect","onRemoveContact","TransitionGroup","component","onClick","onFilter","App","onFetchContacts","override","css","length","unmountOnExit","size","color","isLoadingContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff415b9a.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"contact/request\");\nconst addContactSuccess = createAction(\"contact/success\");\nconst addContactError = createAction(\"contact/error\");\n\nconst fetchContactsRequest = createAction(\"contact/fetchRequest\");\nconst fetchContactsSuccess = createAction(\"contact/fetchSuccess\");\nconst fetchContactsError = createAction(\"contact/fetchError\");\n\nconst removeContactRequest = createAction(\"contact/removeRequest\");\nconst removeContactSuccess = createAction(\"contact/removeSuccess\");\nconst removeContactError = createAction(\"contact/removeError\");\n\nconst onChangeFilter = createAction(\"contact/filter\");\n\nconst contactsActions = {\n  onChangeFilter,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n};\n\nexport default contactsActions;\n","import { combineReducers } from \"redux\";\nimport contactsActions from \"./contactsActions\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nconst items = createReducer([], {\n  [contactsActions.fetchContactsSuccess]: (state, action) => action.payload,\n  [contactsActions.addContactSuccess]: (state, action) => [\n    ...state,\n    action.payload,\n  ],\n  [contactsActions.removeContactSuccess]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.onChangeFilter]: (state, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.fetchContactsRequest]: () => true,\n  [contactsActions.fetchContactsSuccess]: () => false,\n  [contactsActions.fetchContactsError]: () => false,\n  [contactsActions.removeContactRequest]: () => true,\n  [contactsActions.removeContactSuccess]: () => false,\n  [contactsActions.removeContactError]: () => false,\n});\n\nexport default combineReducers({ items, filter, loading });\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contactsReducers\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\nexport default store;\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./AppHeader.css\";\nconst AppHeader = () => {\n  return (\n    <header>\n      <CSSTransition in={true} appear={true} timeout={500} classNames=\"logoIn\">\n        <h2 className=\"logo\">PhoneBook</h2>\n      </CSSTransition>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import React from \"react\";\nimport \"./Layout.css\";\nconst Layout = ({ children }) => {\n  return <div className=\"container\">{children}</div>;\n};\n\nexport default Layout;\n","import React from \"react\";\nimport \"./InputForm.css\";\nconst InputForm = ({ label, placeholder, type, value, onInput }) => {\n  return (\n    <label>\n      <p className=\"labelName\">{label}</p>\n      <input\n        type={type}\n        placeholder={placeholder}\n        value={value}\n        onChange={(e) => onInput(e.target.value)}\n        className=\"input\"\n      ></input>\n    </label>\n  );\n};\n\nexport default InputForm;\n","import axios from \"axios\";\nimport contactsActions from \"./contactsActions\";\n\nconst addContact = ({ name, number }) => (dispatch) => {\n  dispatch(contactsActions.addContactRequest());\n\n  axios\n    .post(\"http://localhost:2000/contacts\", { name, number })\n    .then((response) =>\n      dispatch(contactsActions.addContactSuccess(response.data))\n    )\n    .catch((error) => dispatch(contactsActions.addContactError(error)));\n};\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(contactsActions.fetchContactsRequest());\n\n  axios\n    .get(\"http://localhost:2000/contacts\")\n    .then((response) =>\n      dispatch(contactsActions.fetchContactsSuccess(response.data))\n    )\n    .catch((error) => dispatch(contactsActions.fetchContactsError(error)));\n};\n\nconst removeContact = (id) => (dispatch) => {\n  dispatch(contactsActions.removeContactRequest());\n\n  axios\n    .delete(`http://localhost:2000/contacts/${id}`)\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\n    .catch((error) => dispatch(contactsActions.removeContactError(error)));\n};\n\nconst contactsOperations = {\n  addContact,\n  fetchContacts,\n  removeContact,\n};\n\nexport default contactsOperations;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getContacts = (state) => state.contacts.items;\n\nconst getLoading = (state) => state.contacts.loading;\n\nconst getFilter = (state) => state.contacts.filter;\n\nconst filteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nconst contactsSelectors = {\n  getContacts,\n  getLoading,\n  getFilter,\n  filteredContacts,\n};\n\nexport default contactsSelectors;\n","import React, { Component } from \"react\";\nimport \"./ContactForm.css\";\nimport InputForm from \"../InputForm/InputForm\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  notify = () =>\n    toast.error(\" This contact already exist!\", {\n      position: \"top-center\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    if (!name || !number) {\n      return;\n    }\n    const contactName = this.props.contacts.map((el) => {\n      return el.name;\n    });\n    const validation = contactName.find((el) => el === name);\n\n    validation === name ? this.notify() : this.props.onAddContact(this.state);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleInput = (value) => {\n    this.setState({ name: value });\n  };\n  handleNumber = (value) => {\n    this.setState({ number: value });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form\">\n        <ToastContainer />\n        <InputForm\n          label=\"Name\"\n          type=\"text\"\n          value={name}\n          placeholder=\"Enter your name\"\n          onInput={this.handleInput}\n        />\n        <InputForm\n          label=\"Number\"\n          type=\"tel\"\n          value={number}\n          placeholder=\"Enter your number\"\n          onInput={this.handleNumber}\n        />\n        <button type=\"submit\" className=\"buttonSubmit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: contactsSelectors.getContacts(state),\n  };\n};\nconst mapDispatchToProps = { onAddContact: contactsOperations.addContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { connect } from \"react-redux\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport \"./ContactList.css\";\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className=\"contactsList\">\n      {contacts.map((contact) => (\n        <CSSTransition key={contact.id} timeout={250} classNames=\"contactIn\">\n          <li className=\"contactItem\">\n            <span className=\"contactText\">\n              {contact.name} : {contact.number}\n            </span>\n            <button\n              type=\"button\"\n              className=\"removeBtn\"\n              onClick={() => onRemoveContact(contact.id)}\n            >\n              X\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.filteredContacts(state),\n});\n\nconst mapDispatchToProps = {\n  onRemoveContact: contactsOperations.removeContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\n\nimport \"./Filter.css\";\nconst Filter = ({ value, onFilter }) => {\n  return (\n    <div className=\"filterContainer\">\n      <p className=\"filterTitle\">Find contact by name</p>\n      <label>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={(e) => onFilter(e.target.value)}\n          className=\"filterInput\"\n        />\n      </label>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: contactsSelectors.getFilter(state),\n});\nconst mapDispatchToProps = { onFilter: contactsActions.onChangeFilter };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport AppHeader from \"./components/AppHeader/AppHeader\";\nimport Layout from \"./components/Layout/Layout\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport \"./App.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport contactsOperations from \"./redux/contacts/contactsOperations\";\nimport contactsSelectors from \"./redux/contacts/contactsSelectors\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n  render() {\n    const override = css`\n      display: block;\n      margin: 0 auto;\n      border-color: blue;\n    `;\n    return (\n      <Layout>\n        <AppHeader />\n\n        <ContactForm />\n        <CSSTransition\n          in={this.props.contacts.length > 1}\n          timeout={250}\n          classNames=\"filterIn\"\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n\n        <ClipLoader\n          css={override}\n          size={150}\n          color={\"#123abc\"}\n          loading={this.props.isLoadingContacts}\n        />\n        <ContactList />\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getContacts(state),\n  isLoadingContacts: contactsSelectors.getLoading(state),\n});\nconst mapDispatchToProps = {\n  onFetchContacts: contactsOperations.fetchContacts,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}